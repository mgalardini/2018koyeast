#!/usr/bin/env python


import sys
import argparse
import numpy as np
import pandas as pd
from copy import deepcopy


def get_options():
    description = 'Obtain a rectangle growth matrix'
    parser = argparse.ArgumentParser(description=description)

    parser.add_argument('input',
                        help='Input tidy growth matrix')
    
    parser.add_argument('--column',
                        default='score',
                        help='Columns to use for matrix pivot [Default: score]')
    parser.add_argument('--shuffle',
                        action='store_true',
                        default=False,
                        help='Shuffle phenotypes')

    return parser.parse_args()


if __name__ == "__main__":
    options = get_options()

    b = pd.read_table(options.input)
    b = b[b['info'] != 'undefined']
    b['signed-qvalue'] = np.sign(b['score']) * -np.log10(b['qvalue'])
    b['sick'] = ((b['score'] < 0) &
                 (b['qvalue'] < 0.05)).astype(int)
    g = b.pivot_table(index='info',
                      columns='condition',
                      values=options.column)
    g = g.reset_index()
    g.columns = ['FID' if x == 'info'
                 else x
                 for x in g.columns]
    g['IID'] = g['FID']
    g = g[['FID', 'IID'] + sorted(g.columns.difference(['FID', 'IID']))]
    g.columns = [x.replace('-', '')
                 for x in g.columns]
    if options.shuffle:
        idx = [x for x in g['IID']]
        g = g.sample(frac=1.)
        g['IID'] = idx
        g['FID'] = idx
    g.to_csv(sys.stdout,
             sep='\t',
             index=False,
             na_rep='NA')
