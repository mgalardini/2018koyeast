#!/usr/bin/env python
'''Sort the conditions based on s-scores clustering'''


import argparse
import numpy as np
import pandas as pd
from scipy import cluster
import fastcluster as fst


def get_options():
    description = 'Sort the conditions based on s-scores clustering'
    parser = argparse.ArgumentParser(description=description)

    parser.add_argument('scores',
                        help='S-scores file')

    parser.add_argument('--strain',
                        default='S288C',
                        help='Strain to focus on [default %(default)s]')

    return parser.parse_args()


if __name__ == "__main__":
    options = get_options()

    m = pd.read_table(options.scores,
                      index_col=[0, 2]).sort_index()
    genes = None
    for s in {x[0] for x in m.index}:
        gs = {x for x in m.loc[s].index}
        if genes is None:
            genes = gs
        else:
            genes = genes.intersection(gs)
    genes = sorted(genes)
    m = m.loc[(options.strain, genes),]
    m = m.pivot_table(index=['strain', 'gene'],
                      columns='condition',
                      values='score')

    m = m.copy(deep=True)
    m[np.isnan(m)] = 0.
    cl = fst.linkage(m.T, method='average')
    cd = cluster.hierarchy.dendrogram(cl, no_plot=True,
                                      color_threshold=-np.inf)
    co = m.columns[cd['leaves']]
    for c in co:
        print(c)
