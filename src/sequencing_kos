#!/usr/bin/env python


import os
import sys
import argparse
import pybedtools
import numpy as np
import pandas as pd


def get_options():
    description = 'Find KO regions from coverage data'
    parser = argparse.ArgumentParser(description=description)

    parser.add_argument('sgd',
                        help='SGD features table')
    parser.add_argument('qc',
                        help='Sequencing QC table')
    parser.add_argument('seq',
                        help='Sequencing table')
    parser.add_argument('ncbi',
                        help='NCBI features BED file')
    parser.add_argument('mosdepth',
                        help='mosdepth results directory')

    parser.add_argument('--min-depth',
                        type=float,
                        default=0.6,
                        help='Minimum target depth (default: %(default).2f)')
    parser.add_argument('--coverage',
                        type=float,
                        default=0,
                        help='Coverage threshold to call KOs (default: %(default).2f)')
    parser.add_argument('--length',
                        type=int,
                        default=1000,
                        help='Size threshold to call KOs (default: %(default)d)')

    return parser.parse_args()


if __name__ == "__main__":
    options = get_options()

    sgd = options.sgd
    qc = options.qc
    seq = options.seq
    ncbi = options.ncbi

    genes = pybedtools.BedTool(ncbi)

    g = pd.read_csv(sgd, sep='\t', header=None)
    gn = g[g[1] == 'ORF'].set_index(3)[4].dropna().to_dict()
    rgn = g[g[1] == 'ORF'].set_index(4)[3].dropna().to_dict()
    gd = g[g[1] == 'ORF'].set_index(3)[15].dropna().to_dict()

    qc = pd.read_csv(qc, sep='\t')

    qc = qc[(qc['sample'].str.startswith('Gback')) &
            (qc['depth'] > options.min_depth)].copy()

    seq = pd.read_csv(seq, sep='\t')

    seq = seq[seq['sample'].isin(qc['sample'])]
    seq['locus'] = [rgn.get(x, x) for x in seq['gene']]

    res = []
    for gene, strain, age, sample, locus in seq.values:
        n = pd.read_csv(os.path.join(options.mosdepth,
                                     sample,
                                     '%s.per-base.bed.gz' % sample),
                        sep='\t',
                        header=None)
        n.columns = ['chr', 'start', 'stop',  'coverage']
        n['size'] = n['stop'] - n['start']
        gaps = pybedtools.BedTool([pybedtools.Interval(x, y, z)
                                   for x, y, z, _, _ in n[(n['coverage'] <= options.coverage) &
                                                          (n['size'] >= options.length)].values])

        inter = pd.DataFrame([str(x).rstrip().split('\t')
                              for x in genes.intersect(gaps)])
        inter.columns = ['chr', 'start', 'stop', 'gene']
        inter['name'] = [gn.get(x, x) for x in inter['gene']]
        inter['strain'] = strain
        inter['target'] = gene
        inter['sample'] = sample
        inter['set'] = age
        res.append(inter)
    inter = pd.concat(res)

    inter.to_csv(sys.stdout, sep='\t', index=False)
